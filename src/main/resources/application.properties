
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=root
quarkus.datasource.password=password

quarkus.swagger-ui.path=swagger-ui
quarkus.swagger-ui.always-include=true

quarkus.http.port=8088
#change according to your database
quarkus.datasource.reactive.url=mysql://avaas-database-1.cienya3ax72e.us-east-1.rds.amazonaws.com:3306/quarkus_db
#change according to your ec2 instance with kafka
kafka.bootstrap.servers=ec2-54-82-199-220.compute-1.amazonaws.com:9092 


## AV KAFKA ##

# consume av

# incoming channel (reading from Kafka)
mp.messaging.incoming.av-in.connector=smallrye-kafka
mp.messaging.incoming.av-in.topic=av
mp.messaging.incoming.av-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.av-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# outgoing channel (writing to Kafka)
mp.messaging.outgoing.av-out.connector=smallrye-kafka
mp.messaging.outgoing.av-out.topic=av
mp.messaging.outgoing.av-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.av-out.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

## APilot KAFKA ##

# consume apilot

# incoming channel (reading from Kafka)
mp.messaging.incoming.apilot-in.connector=smallrye-kafka
mp.messaging.incoming.apilot-in.topic=apilot
mp.messaging.incoming.apilot-in.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.apilot-in.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer

# outgoing channel (writing to Kafka)
mp.messaging.outgoing.apilot-out.connector=smallrye-kafka
mp.messaging.outgoing.apilot-out.topic=apilot
mp.messaging.outgoing.apilot-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.apilot-out.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

## AV Event KAFKA ##

# consume AV event

# incoming av-event-topic channel (reading from Kafka)
mp.messaging.incoming.av-event.connector=smallrye-kafka
mp.messaging.incoming.av-event.topic=av-event
mp.messaging.incoming.av-event.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.av-event.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

## AV Result KAFKA ##

# produce AV event

# outoing av-result-topic channel (reading from Kafka)
mp.messaging.outgoing.av-result-out.connector=smallrye-kafka
mp.messaging.outgoing.av-result-out.topic=av-result
mp.messaging.outgoing.av-result-out.key.serializer=org.apache.kafka.common.serialization.StringSerializer
mp.messaging.outgoing.av-result-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# outoing av-result-topic channel (writeing to Kafka)
mp.messaging.incoming.av-result-in.connector=smallrye-kafka
mp.messaging.incoming.av-result-in.topic=av-result
mp.messaging.incoming.av-result-in.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.av-result-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer